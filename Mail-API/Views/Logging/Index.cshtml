@model IEnumerable<Mail_API.Models.Db.Mail>
    <head>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <script type="text/javascript" src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
        <script type="text/javascript" src="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css"></script>
        @{
            ViewData["Title"] = "Mail-log";
        }
    </head>
<script>
    $(document).ready( function () {
        var table = $('#mailTable').DataTable({
        order: [[0, "desc"]],
        "pageLength": 50,
        "processing": true,
        "serverSide": true,
        "searchDelay": 350,
        "ajax": {
            "url": "/logging/loaddata",
            "type": "POST",
            "datatype": "json"
        },
        "columns":[
            { "data": "Id", "name": "Id"},
            { "data": "ExternalId", "name": "ExternalId"},
            { "data": "Status","name": "Status"},
            { "data": "CreatedTime", "name": "CreatedTime"},
            { "data": "SentTime","name": "SentTime"},
            { "data": "TrackerId","name": "TrackerId"},
            { "data": "OpenTime","name": "OpenTime"},
            { "data": "IPAddress","name": "IPAddress"},
            { "data": "Receiver","name": "Receiver"},
            { "data": "Sender","name": "Sender"},
            { "data": "ReplyTo","name": "ReplyTo"},
            { "data": "Subject","name": "Subject"},
            { "data": "Body", "name": "Body" },
            { "data":null, "render": function(data,type,row,meta){
                return "<td><button id='expand-"+row.id+"' class='btn btn-primary expand'>Visa hela meddelandet</button></td>";		
            }}
        ]
    });
	
	$('#searchField').on( 'keyup', function () {
		table.search( this.value ).draw();
	});
	$('body').on('click','.expand', function(){
		var id = $(this).attr('Id').substr(7);
		$(this).closest('tr').after("<tr><td colspan='7' id='td_"+id+"'>Test</td></tr>");
		console.log("We Click");
		$.ajax({    
			context: this,
			url: 'ajax.php',                        
			type : 'POST',
			data: {'Id': id},   
			error: function(error){
				console.log(error,"Error in ajax request");
			},
			success: function(data)          
			{
				console.log("Success of ajax request");
				console.log(data);
				$(this).replaceWith("<button id='contract_"+id+"' class='btn btn-danger contract'>Dölj meddelandet</button>");
				$('#td_'+id).html(data);
			}
		});
	});
	$('body').on('click', '.contract', function(){
		var id = $(this).attr('Id').substr(9);
		$('#td_'+id).parent().remove();
		$(this).replaceWith("<button id='expand_"+id+"' class='btn btn-primary expand'>Visa hela meddelandet</button>");
	});
    });
 
</script>
<style>
    body {
        color: #292b2c;
    }

    .sorting {
        background-color: beige;
        margin-right: 8px;
    }

    .table th {
        background-color: #292b2c;
        color: azure;
        border-top: 1px solid #eceeef;
    }
    .table td {
        background-color: #dff0d8;
    }

    table.dataTable thead .sorting:after,
    table.dataTable thead .sorting:before,
    table.dataTable thead .sorting_asc:after,
    table.dataTable thead .sorting_asc:before,
    table.dataTable thead .sorting_asc_disabled:after,
    table.dataTable thead .sorting_asc_disabled:before,
    table.dataTable thead .sorting_desc:after,
    table.dataTable thead .sorting_desc:before,
    table.dataTable thead .sorting_desc_disabled:after,
    table.dataTable thead .sorting_desc_disabled:before {
        bottom: .5em;
    }
</style>

<div class="container">
    <div class="dropdown-header">
    </div>
    <div class="jumbotron">
        <h1 class="display-3">Sök skickade mail</h1>
        <input id="searchField" type="text" class="form-control form-control-lg" placeholder="Sök" />
    </div>
</div>

<div class="container-fluid">
    <div id="mailTableWrapper container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <table class="table" id="mailTable">
                    <thead>
                    <tr>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.Id)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.ExternalId)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.CreatedTime)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.SentTime)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.TrackerId)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.OpenTime)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.IPAddress)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.Receiver)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.Sender)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.ReplyTo)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.Subject)
                        </th>
                        <th class="sorting">
                            @Html.DisplayNameFor(model => model.Body)
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ExternalId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SentTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TrackerId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OpenTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IPAddress)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Receiver)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Sender)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReplyTo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Subject)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Body)
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>